RTOS Lab Assignment – Set 1
Submission deadline: 19th August 2017

Write and execute C programs to do the 
following tasks.
1.	Get ten numbers 
from user. Store them in an array. Using 
functions, 
find sum, average and product o
f the numbers. Print the sum, average and product in the main 
function.
2.	Modi
fy the above program to continue to accept the input 
from the user until the user enters ‘999’. As the user inputs the number, the sum, average and product should be displayed in the main 
function. 
3.	Read a string 
from a 
file. Count the number o
f characters in a given string without making use o
f the string library 
function. Use ‘
for loop’. Get the input using ‘
fscan
f’. Use 
functions and pass string by re
ference.
4.	Read a text stored in a 
file. Count the number o
f words and lines in the 
file. Use 
functions.
5.	Read a text 
file called input.txt and segregate the even (2nd,4th, 6th …) and odd (1st,3rd,5th…) words into two di
f
ferent 
files names even.txt and odd.txt. Get the names o
f input and output 
files through command line arguments.
6.	Read a text 
file called input.txt and change all the characters to uppercase characters (Eg: “ThisIsASampleText” should be changed to “THISISASAMPLETEXT”.
7.	Get ten numbers 
from the user. Write a 
function to arrange them in ascending order and another 
function to arrange them in descending order. Print out the arranged sequence onto the console.
8.	Read the numbers stored in a 
file named input.txt. Write a 
function to check i
f the number is divisible by 8. Create an output 
file named output.txt.  I
f it is divisible, write number ‘1’ into output 
file. I
f it is not divisible, write ‘0’ to the output 
file.
9.	Create a telephone directory, with the 
first name, last name and telephone number. Provide the 
facility to order the entries o
f the directory according to the alphabetical ordering o
f the 
first name or based on the telephone number. Get the data 
from a 
file and use switch –case in your program. Provide user option to view entries ordered based on name or number. 
10.	Compare two dates and display the latter one. Consider the date as consisting o
f day, month and year. Get the dates through user inputs through console. Use structures in this program.
11.	Write a C program to 
find the 
factorial o
f the number entered by user. (eg: 5!=120)
12.	Write a C program to read input.txt 
file to obtain in
formation about the students such as name, course and marks. Use structures in the program. Display the names o
f students according to the ascending order o
f marks. Also 
find out grade o
f the student which is based on the marks o
f the student and accordingly write Grade o
f the student along with the student names into output.txt. Grade calculation may be done as below.
Marks > = 90 then Grade = ‘A’, 
Marks > = 70 and Marks < 90 then Grade = ‘B’, 
Marks > = 40 and Marks < 70 then Grade = ‘C’,
Else Grade = ‘D’






13.	Modi
fy the above program by adding one more 
functionality to read output.txt and display the number o
f students who have obtained Grade A.

14.	Read a 
file in which numbers are stored. Segregate the even and odd numbers into two di
f
ferent 
files named even.txt and odd.txt.

15.	Write a C program which reads input.txt, checks to see i
f the string contains a ‘
F’ and i
f so, it breaks the string into another word and writes to output.txt.


